parameters:
- name: applicationName
  type: string
- name: environmentName
  type: string
- name: environmentId
  type: string
- name: serviceConnection
  type: string
- name: subscriptionId
  type: string
- name: clientId
  type: string
- name: clientSigningKey
  type: string
- name: graphAccessClientId
  type: string
- name: graphAccessClientSecret
  type: string
- name: extensionAppId
  type: string
  default: '9509a3af9e674a7d9443a094c02c8e69'
- name: deploymentPrimaryLocation
  type: string
- name: deploymentSecondaryLocation
  type: string
- name: deployApim
  type: boolean
  default: false
- name: eapimEnvironmentName
  type: string
  values:
  - Development
  - Test
  - Oat
  - Production
- name: eapimNamedValuesFileName
  type: string


jobs:
- deployment: Deploy
  displayName: Deploy Azure Function
  environment: ${{parameters.environmentName}}
  pool:
    vmImage: ${{parameters.agentImage}}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: /Infrastructure/steps/deploy-template.yml@devopsTemplates
          parameters:
            serviceConnection: ${{parameters.serviceConnection}}
            subscriptionId: ${{parameters.subscriptionId}}
            resourceGroupName: ${{parameters.resourceGroupName}}
            location: ${{parameters.location}}
            templateFilePath: '$(Build.SourcesDirectory)/arm/template.json'
            armParameterOverrideString: ${{parameters.overrideParameters}}

        - task: Tokenization@2
          displayName: Tokenise CSV Files
          inputs:
            SourcePath: '$(Build.SourcesDirectory)\eapim\namedValues'
            TargetFileNames: '*.csv'
            RequireVariable: true
            TokenStart: '{{'
            TokenEnd: '}}'

        - task: AzureAppServiceManage@0
          displayName: Install Site Extensions
          inputs:
            azureSubscription: ${{parameters.serviceConnection}}
            Action: 'Install Extensions'
            WebAppName: ${{parameters.applicationName}}-${{parameters.environmentName}}-function
            ExtensionsList: 'Microsoft.VisualStudio.SnapshotDebugger.AzureAppServices.Standalone'

        - template: /Application/dotnet/steps/deploy-function.yml@devopsTemplates
          parameters:
            azureSubscription: ${{parameters.serviceConnection}}
            applicationName: ${{parameters.applicationName}}
            environmentName: ${{parameters.environmentName}}

        - pwsh : |
            $url = "$($env:ARMOUTPUT_FUNCTIONURL)${{parameters.eapimApiOpenApiSchemaPath}}"
            $filePath = "$($env:BUILD_SOURCESDIRECTORY)\definition.json"
            Write-Host "url: $($url)"
            Write-Host "filePath: $($filePath)"
            Invoke-RestMethod -Method Get -Uri $url -ContentType "application/json" -OutFile $filePath -MaximumRetryCount 5 -RetryIntervalSec 10
          name: getDefinition
          displayName: Download OpenApi Definition

        - template: /Application/dotnet/steps/import-function-eapim.yml@devopsTemplates
          parameters:
            serviceConnection: ${{parameters.serviceConnection}}
            eapimServiceConnection: $(eapimServiceConnection)
            functionName: $(armOutput.functionName)
            functionKey: $(armOutput.functionDefaultKey)
            functionUrl: $(armOutput.functionUrl)
            productName: ${{parameters.eapimProductName}}
            publishContactEmail: ${{parameters.eapimProductContactEmail}}
            publishApiName: ${{parameters.eapimApiPublishedName}}
            publishApiOpenApiSchemaPath: '$(Build.SourcesDirectory)\definition.json'
            publishApiPath: ${{parameters.eapimApiPublishedPath}}
            publishApiXmlPolicyPath: ${{parameters.eapimApiXmlPolicyPath}}
            eapimEnvironment: ${{parameters.eapimEnvironmentName}}
            namedValuesIncluded: ${{parameters.eapimNamedValuesIncluded}} 
            namedValuesFileName: ${{parameters.eapimNamedValuesFileName}}