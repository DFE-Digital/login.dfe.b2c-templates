{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25
        },
        "environmentName": {
            "type": "string",
            "defaultValue": "dev"
        },
        "deployApim": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Deploy Apim Layer6edd5a57-4efa-4c5e-93c4-a26a13591694"
            }
        },
        "publisherEmail": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "The email address of the owner of the service"
            },
            "defaultValue": "publisher@internet.com"
        },
        "publisherName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "The name of the owner of the service"
            }
        },
        "apimSku": {
            "type": "string",
            "allowedValues": [
                "Developer",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Developer"
        },
        "apimSkuCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The instance size of this API Management service."
            }
        },
        "servicePlanSkuName": {
            "defaultValue": "F1",
            "type": "string",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4",
                "I1"
            ],
            "metadata": {
                "description": "The instance size of the app."
            }
        },
        "servicePlanSkuTier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium",
                "Isolated",
                "Basic",
                "Free"
            ],
            "metadata": {
                "description": "The pricing tier for the App Service plan."
            }
        },
        "servicePlanSkuCount": {
            "type": "string",
            "metadata": {
                "description": "Instance Size"
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
                "Organisation": "DfE"
            }
        },
        "secondaryStorageLocation": {
            "type": "string"
        },
        "alertsEnabled": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Enable Alerts"
            }
        },
        "alertRequestsRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 60,
            "metadata": {
                "description": "An integer to indicate the number of requests required to trigger the alert."
            }
        },
        "alertAppConnectionsRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 100,
            "metadata": {
                "description": "An integer to indicate the number of connections required to trigger the alert."
            }
        },
        "alertAverageResponseTimeRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "An integer to indicate the average response time in seconds that is required to trigger the alert."
            }
        },
        "alertMemoryWorkingSetRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 536870912,
            "metadata": {
                "description": "An integer to indicate the number of bytes required to trigger the alert."
            }
        },
        "useAutoScaling": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Enable AutoScale rule"
            }
        },
        "autoScaleMinimumNumberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "minimum instance count"
            }
        },
        "autoScaleMaximumNumberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "maximum instance count"
            }
        },
        "scaleUpthreshold": {
            "type": "int",
            "defaultValue": 50,
            "metadata": {
                "description": "Threshold before scale event"
            }
        },
        "scaleDownThreshold": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Threshold before scale event"
            }
        },
        "alertWebHookUrl": {
            "type": "string",
            "metadata": {
                "description": "Web hook for Autoscaling Alerts"
            }
        },
        "B2CTenant": {
            "type": "string"
        },
        "B2CSignUpPolicy": {
            "type": "string"
        },
        "B2CSignupConfirmPolicy": {
            "type": "string"
        },
        "B2CPasswordResetConfirmPolicy": {
            "type": "string"
        },
        "B2CClientId": {
            "type": "string"
        },
        "B2CRedirectUri": {
            "type": "string"
        },
        "B2CAuthorizationUrl": {
            "type": "string"
        },
        "ClientSigningKey": {
            "type": "string"
        },
        "AccountActivationEmailExpiryInSeconds": {
            "type": "int",
            "defaultValue": 300
        },
        "SMTPServer": {
            "type": "string"
        },
        "SMTPPort": {
            "type": "int",
            "defaultValue": 587
        },
        "SMTPUsername": {
            "type": "securestring"
        },
        "SMTPPassword": {
            "type": "securestring"
        },
        "SMTPUseSSL": {
            "type": "bool",
            "defaultValue": true
        },
        "SMTPFromAddress": {
            "type": "string"
        },
        "SMTPSubject": {
            "type": "string"
        },
        "SignupEmailSubject": {
            "type": "string"
        },
        "SignupConfirmationEmailSubject": {
            "type": "string"
        },
        "PasswordResetConfirmationEmailSubject": {
            "type": "string"
        },
        "NCSApimSubscriptionKey": {
            "type": "securestring"
        },
        "NCSDSSApiKey": {
            "type": "securestring"
        },
        "NCSDSSSearchApiUrl": {
            "type": "string"
        },
        "NCSDSSSearchApiVersion": {
            "type": "string"
        }

    },
    "variables": {
        "baseName": "[concat(parameters('applicationName'), '-', parameters('environmentName'))]",
        "resourceNames": {
            "applicationInsightsName": "[concat(variables('baseName'), '-ai')]",
            "apiManagementName": "[concat(variables('baseName'), '-apim')]",
            "defaultStorageAccountName": "[replace(concat(variables('baseName'), 'default'), '-', '')]",
            "secondaryStorageAccountName": "[replace(concat(variables('baseName'), 'storage'), '-', '')]",
            "servicePlanName": "[concat(variables('baseName'), '-function-asp')]",
            "functionName": "[concat(variables('baseName'), '-function')]",
            "autoScaleRuleName": "[concat(variables('baseName'), '-function-asp-autoscale-setting')]",
            "actionGroupName": "[concat(variables('baseName'),'-action-group')]",
            "actionGroupShortName": "[concat(parameters('applicationName'),'-ag')]"
        },
        "resourceIds": {
            "apimId": "[resourceId('Microsoft.ApiManagement/service', variables('resourceNames').apiManagementName)]",
            "appInsightsId": "[resourceId('Microsoft.Insights/components/', variables('resourceNames').applicationInsightsName)]",
            "defaultStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('resourceNames').defaultStorageAccountName)]",
            "secondaryStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('resourceNames').secondaryStorageAccountName)]",
            "servicePlanId": "[resourceId('Microsoft.Web/serverfarms', variables('resourceNames').servicePlanName)]",
            "functionId": "[resourceId('Microsoft.Web/sites', variables('resourceNames').functionName )]",
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('resourceNames').actionGroupName)]",
            "storageAccountDefaultBlobContainerId": "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('resourceNames').secondaryStorageAccountName, 'default')]"
        },
        "alertRules": [
            {
                "name": "[concat('Requests - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the average number of requests is greater than ', parameters('alertRequestsRuleCriteriaThreshold') ,' per minute over a 5 minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "Requests",
                "criteriaName": "Requests",
                "criteriaMetricName": "Requests",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Average",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertRequestsRuleCriteriaThreshold')]"
            },
            {
                "name": "[concat('Connections - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the total number of connections is greater than ', parameters('alertAppConnectionsRuleCriteriaThreshold') ,' per minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "AppConnections",
                "criteriaName": "AppConnections",
                "criteriaMetricName": "AppConnections",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Total",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertAppConnectionsRuleCriteriaThreshold')]"
            },
            {
                "name": "[concat('Average Response Time - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the average response time is greater than ', parameters('alertAverageResponseTimeRuleCriteriaThreshold') ,' seconds per minute over a 5 minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "AverageResponseTime",
                "criteriaName": "AverageResponseTime",
                "criteriaMetricName": "AverageResponseTime",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Average",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertAverageResponseTimeRuleCriteriaThreshold')]"
            },
            {
                "name": "[concat('Memory Working Set - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the average memory working set is greater than ', parameters('alertMemoryWorkingSetRuleCriteriaThreshold') ,' bytes per minute over a 5 minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "MemoryWorkingSet",
                "criteriaName": "MemoryWorkingSet",
                "criteriaMetricName": "MemoryWorkingSet",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Average",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertMemoryWorkingSetRuleCriteriaThreshold')]"
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2019-06-01",
            "kind": "StorageV2",
            "name": "[variables('resourceNames').defaultStorageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "kind": "StorageV2",
            "name": "[variables('resourceNames').secondaryStorageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot",
                "primaryLocation": "[resourceGroup().location]",
                "secondaryLcation": "[parameters('secondaryStorageLocation')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('resourceNames').secondaryStorageAccountName, '/default')]",
            "dependsOn": [
                "[variables('resourceIds').secondaryStorageAccountId]"
            ],
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('resourceNames').secondaryStorageAccountName, concat('/default/ui-files-', parameters('environmentName')))]",
            "dependsOn": [
                "[variables('resourceIds').secondaryStorageAccountId]",
                "[variables('resourceIds').storageAccountDefaultBlobContainerId]"

            ],
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "name": "[variables('resourceNames').applicationInsightsName]",
            "apiVersion": "2018-05-01-preview",
            "tags": "[parameters('tags')]",
            "type": "microsoft.insights/components",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Ver": "v2",
                "ApplicationId": "[variables('resourceNames').applicationInsightsName]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            },
            "dependsOn": [
                "[variables('resourceIds').defaultStorageAccountId]"
            ]
        },
        {
            "type": "Microsoft.Insights/actionGroups",
            "name": "[variables('resourceNames').actionGroupName]",
            "apiVersion": "2019-06-01",
            "location": "Global",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('resourceIds').functionId]"
            ],
            "scale": null,
            "properties": {
                "groupShortName": "[variables('resourceNames').actionGroupShortName]",
                "enabled": "[parameters('alertsEnabled')]",
                "emailReceivers": [
                    {
                        "name": "Email",
                        "emailAddress": "[parameters('publisherEmail')]",
                        "useCommonAlertSchema": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "name": "[variables('alertRules')[copyIndex()].name]",
            "apiVersion": "2018-03-01",
            "location": "global",
            "copy": {
                "name": "rulescopy",
                "count": "[length(variables('alertRules'))]"
            },
            "tags": "[parameters('tags')]",
            "scale": null,
            "properties": {
                "description": "[variables('alertRules')[copyIndex()].description]",
                "severity": "[variables('alertRules')[copyIndex()].severity]",
                "enabled": "[parameters('alertsEnabled')]",
                "scopes": [
                    "[variables('alertRules')[copyIndex()].scopeResourceId]"
                ],
                "evaluationFrequency": "[variables('alertRules')[copyIndex()].evaluationFrequency]",
                "windowSize": "[variables('alertRules')[copyIndex()].windowSize]",
                "templateType": 8,
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[variables('alertRules')[copyIndex()].criteriaThreshold]",
                            "name": "[variables('alertRules')[copyIndex()].criteriaName]",
                            "metricNamespace": "[variables('alertRules')[copyIndex()].criteriaMetricNamespace]",
                            "metricName": "[variables('alertRules')[copyIndex()].criteriaMetricName]",
                            "dimensions": [
                            ],
                            "operator": "[variables('alertRules')[copyIndex()].criteriaOperator]",
                            "timeAggregation": "[variables('alertRules')[copyIndex()].criteriaTimeAggregation]",
                            "monitorTemplateType": 8
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "[variables('alertRules')[copyIndex()].criteriaMetricNamespace]",
                "actions": [
                    {
                        "actionGroupId": "[variables('resourceIds').actionGroupId]",
                        "webHookProperties": {
                        }
                    }
                ]
            },
            "dependsOn": [
                "[variables('resourceIds').functionId]",
                "[variables('resourceIds').actionGroupId]",
                "[variables('alertRules')[copyIndex()].scopeResourceId]"
            ]
        },
        {
            "condition": "[parameters('useAutoScaling')]",
            "type": "Microsoft.Insights/autoscalesettings",
            "name": "[variables('resourceNames').autoScaleRuleName]",
            "apiVersion": "2015-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('resourceIds').servicePlanId]"
            ],
            "properties": {
                "profiles": [
                    {
                        "name": "DefaultAutoscaleProfile",
                        "capacity": {
                            "minimum": "[parameters('autoScaleMinimumNumberOfInstances')]",
                            "maximum": "[parameters('autoScaleMaximumNumberOfInstances')]",
                            "default": "[parameters('servicePlanSkuCount')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricNamespace": "",
                                    "MetricResourceUri": "[variables('resourceIds').servicePlanId]",
                                    "timeGrain": "PT5M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": "[parameters('scaleUpThreshold')]"
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricNamespace": "",
                                    "MetricResourceUri": "[variables('resourceIds').servicePlanId]",
                                    "timeGrain": "PT5M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": "[parameters('scaleDownThreshold')]"
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": true,
                "targetResourceUri": "[variables('resourceIds').servicePlanId]",
                "notifications": [
                    {
                        "operation": "Scale",
                        "webhooks": [
                            {
                                "serviceUri": "[parameters('alertWebHookUrl')]",
                                "properties": {
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "condition": "[parameters('deployApim')]",
            "apiVersion": "2019-01-01",
            "name": "[variables('resourceNames').apiManagementName]",
            "type": "Microsoft.ApiManagement/service",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "[parameters('apimSku')]",
                "capacity": "[parameters('apimSkuCount')]"
            },
            "location": "[resourceGroup().location]",
            "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]",
                "notificationSenderEmail": "noreply@mail.windowsazure.com"
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "condition": "[parameters('deployApim')]",
            "type": "Microsoft.ApiManagement/service/loggers",
            "apiVersion": "2019-01-01",
            "name": "[concat(variables('resourceNames').apiManagementName, '/', variables('resourceNames').applicationInsightsName)]",
            "dependsOn": [
                "[variables('resourceIds').apimId]",
                "[variables('resourceIds').appInsightsId]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "loggerType": "applicationInsights",
                "credentials": {
                    "instrumentationKey": "[reference(variables('resourceIds').appInsightsId, '2015-05-01').InstrumentationKey]"
                },
                "isBuffered": true
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('servicePlanSkuName')]",
                "tier": "[parameters('servicePlanSkuTier')]",
                "capacity": "[parameters('servicePlanSkuCount')]"
            },
            "apiVersion": "2018-11-01",
            "name": "[variables('resourceNames').servicePlanName]",
            "properties": {
                "name": "[variables('resourceNames').servicePlanName]"
            }
        },
        {
            "name": "[variables('resourceNames').functionName]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "apiVersion": "2019-08-01",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "httpsOnly": true,
                "siteConfig": {
                    "alwaysOn": true,
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(variables('resourceIds').appInsightsId, '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                            "value": "1.0.0"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[concat('InstrumentationKey=', reference(variables('resourceIds').appInsightsId, '2015-05-01').InstrumentationKey)]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('resourceNames').defaultStorageAccountName, ';AccountKey=', listKeys(variables('resourceIds').defaultStorageAccountId, '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "DiagnosticServices_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "InstrumentationEngine_EXTENSION_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "SnapshotDebugger_EXTENSION_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
                            "value": "disabled"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "recommended"
                        },
                        {
                            "name": "Ocp-Apim-Subscription-Key",
                            "value": "[parameters('NCSApimSubscriptionKey')]"
                        },
                        {
                            "name": "B2CTenant",
                            "value": "[parameters('B2CTenant')]"
                        },
                        {
                            "name": "B2CSignUpPolicy",
                            "value": "[parameters('B2CSignUpPolicy')]"
                        },
                        {
                            "name": "B2CSignupConfirmPolicy",
                            "value": "[parameters('B2CSignupConfirmPolicy')]"
                        },
                        {
                            "name": "B2CPasswordResetConfirmPolicy",
                            "value": "[parameters('B2CPasswordResetConfirmPolicy')]"
                        },
                        {
                            "name": "B2CClientId",
                            "value": "[parameters('B2CClientId')]"
                        },
                        {
                            "name": "B2CRedirectUri",
                            "value": "[parameters('B2CRedirectUri')]"
                        },
                        {
                            "name": "B2CAuthorizationUrl",
                            "value": "[parameters('B2CAuthorizationUrl')]"
                        },
                        {
                            "name": "ClientSigningKey",
                            "value": "[parameters('ClientSigningKey')]"
                        },
                        {
                            "name": "AccountActivationEmailExpiryInSeconds",
                            "value": "[parameters('AccountActivationEmailExpiryInSeconds')]"
                        },
                        {
                            "name": "SMTPServer",
                            "value": "[parameters('SMTPServer')]"
                        },
                        {
                            "name": "SMTPPort",
                            "value": "[parameters('SMTPPort')]"
                        },
                        {
                            "name": "SMTPUsername",
                            "value": "[parameters('SMTPUsername')]"
                        },
                        {
                            "name": "SMTPPassword",
                            "value": "[parameters('SMTPPassword')]"
                        },
                        {
                            "name": "SMTPUseSSL",
                            "value": "[parameters('SMTPUseSSL')]"
                        },
                        {
                            "name": "SMTPFromAddress",
                            "value": "[parameters('SMTPFromAddress')]"
                        },
                        {
                            "name": "SMTPSubject",
                            "value": "[parameters('SMTPSubject')]"
                        },
                        {
                            "name": "SignupEmailSubject",
                            "value": "[parameters('SignupEmailSubject')]"
                        },
                        {
                            "name": "SignupConfirmationEmailSubject",
                            "value": "[parameters('SignupConfirmationEmailSubject')]"
                        },
                        {
                            "name": "PasswordResetConfirmationEmailSubject",
                            "value": "[parameters('PasswordResetConfirmationEmailSubject')]"
                        },
                        {
                            "name": "ncs-dss-api-key",
                            "value": "[parameters('NCSDSSApiKey')]"
                        },
                        {
                            "name": "ncs-dss-search-api-url",
                            "value": "[parameters('NCSDSSSearchApiUrl')]"
                        },
                        {
                            "name": "ncs-dss-search-api-version",
                            "value": "[parameters('NCSDSSSearchApiVersion')]"
                        },
                        {
                            "name": "B2COpenApiConfig:ServiceDescription",
                            "value": "DfE NCS B2C Service"
                        },
                        {
                            "name": "B2COpenApiConfig:ServiceTitle",
                            "value": "DFE NCS Auth"
                        },
                        {
                            "name": "B2COpenApiConfig:OpenApiVersion",
                            "value": "V2"
                        }
                    ]
                },
                "name": "[variables('resourceNames').functionName]",
                "serverFarmId": "[variables('resourceIds').servicePlanId]",
                "clientAffinityEnabled": true
            },
            "dependsOn": [
                "[variables('resourceIds').defaultStorageAccountId]",
                "[variables('resourceIds').servicePlanId]",
                "[variables('resourceIds').appInsightsId]"
            ]
        }
    ],
    "outputs": {
        "functionName": {
            "type": "string",
            "value": "[variables('resourceNames').functionName]"
        },
        "functionUrl": {
            "type": "string",
            "value": "[concat('https://', variables('resourceNames').functionName, '.azurewebsites.net')]"
        },
        "functionKey":{
            "type":"string",
            "value":"[listkeys(concat(variables('resourceIds').functionId, '/host/default/'),'2016-08-01').masterKey]"
        },
        "applicationInsightsInstrumentationKey": {
            "type": "string",
            "value": "[reference(variables('resourceIds').appInsightsId, '2015-05-01').InstrumentationKey]"
        }
    }
}