{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25
        },
        "environmentName": {
            "type": "string",
            "defaultValue": "dev"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Prefix of the subnet to integrate the app service with in the virtual network"
            }
        },
        "servicePlanName": {
            "type": "string",
            "metadata": {
                "description": "Service Plan name."
            }
        },
        "configStoreSku": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "tags": {
            "type": "object",
            "defaultValue": {
                "Organisation": "DfE"
            }
        },
        "alertsEnabled": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Enable Alerts"
            }
        },
        "alertRequestsRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 60,
            "metadata": {
                "description": "An integer to indicate the number of requests required to trigger the alert."
            }
        },
        "alertAppConnectionsRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 100,
            "metadata": {
                "description": "An integer to indicate the number of connections required to trigger the alert."
            }
        },
        "alertAverageResponseTimeRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "An integer to indicate the average response time in seconds that is required to trigger the alert."
            }
        },
        "alertMemoryWorkingSetRuleCriteriaThreshold": {
            "type": "int",
            "defaultValue": 536870912,
            "metadata": {
                "description": "An integer to indicate the number of bytes required to trigger the alert."
            }
        },
        "useAutoScaling": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Enable AutoScale rule"
            }
        },
        "autoScaleMinimumNumberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "minimum instance count"
            }
        },
        "autoScaleMaximumNumberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "maximum instance count"
            }
        },
        "scaleUpthreshold": {
            "type": "int",
            "defaultValue": 50,
            "metadata": {
                "description": "Threshold before scale event"
            }
        },
        "scaleDownThreshold": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Threshold before scale event"
            }
        },
        "alertWebHookUrl": {
            "type": "string",
            "metadata": {
                "description": "Web hook for Autoscaling Alerts"
            }
        },
        "B2CTenantShortName": {
            "type": "string"
        },
        "B2CTenantFullName": {
            "type": "string"
        },
        "B2CSignUpPolicy": {
            "type": "string"
        },
        "B2CSignupConfirmPolicy": {
            "type": "string"
        },
        "B2CPasswordResetConfirmPolicy": {
            "type": "string"
        },
        "RelyingPartyAppClientId": {
            "type": "string"
        },
        "B2CRedirectUri": {
            "type": "string"
        },
        "B2CAuthorizationUrl": {
            "type": "string"
        },
        "ClientSigningKey": {
            "type": "string"
        },
        "AccountActivationEmailExpiryInSeconds": {
            "type": "int",
            "defaultValue": 300
        },
        "SMTPServer": {
            "type": "string"
        },
        "SMTPPort": {
            "type": "int",
            "defaultValue": 587
        },
        "SMTPUsername": {
            "type": "securestring"
        },
        "SMTPPassword": {
            "type": "securestring"
        },
        "SMTPUseSSL": {
            "type": "bool",
            "defaultValue": true
        },
        "SMTPFromAddress": {
            "type": "string"
        },
        "SMTPSubject": {
            "type": "string"
        },
        "SignupEmailSubject": {
            "type": "string"
        },
        "SignupConfirmationEmailSubject": {
            "type": "string"
        },
        "PasswordResetConfirmationEmailSubject": {
            "type": "string"
        },
        "NCSApimSubscriptionKey": {
            "type": "securestring"
        },
        "NCSDSSApiKey": {
            "type": "securestring"
        },
        "NCSDSSSearchApiUrl": {
            "type": "string"
        },
        "NCSDSSSearchApiVersion": {
            "type": "string"
        },
        "NCSDSSCreateCustomerApiUrl": {
            "type": "string"
        },
        "NCSDSSCustomersApiVersion": {
            "type": "string"
        },
        "NCSDSSCreateContactApiUrl": {
            "type": "string"
        },
        "NCSDSSContactDetailsApiVersion": {
            "type": "string"
        },
        "NCSDSSCreateIdentityApiUrl": {
            "type": "string"
        },
        "NCSDSSDigitalIdentitiesApiVersion": {
            "type": "string"
        },
        "NCSDSSGetCustomerUrl": {
            "type": "string"
        },
        "NCSDigitalIdentityUrl": {
            "type": "string"
        },
        "TouchpointId": {
            "type": "string"
        },
        "B2CGraphAccessClientId": {
            "type": "string"
        },
        "B2CGraphAccessClientSecret": {
            "type": "string"
        },
        "EmailChangeConfirmationEmailSubjectNewEmail": {
            "type": "string"
        },
        "EmailChangeConfirmationEmailSubjectOldEmail": {
            "type": "string"
        },
        "B2CChangeEmailPolicy": {
            "type": "string"
        },
        "ExtensionAppId": {
            "type": "string"
        },
        "NotifyApiKey": {
            "type": "string"
        },
        "NotifyAidedSignupEmailTemplateId": {
            "type": "string"
        },
        "NotifySelfSignupEmailTemplateId": {
            "type": "string"
        },
        "NotifyPasswordResetConfirmationEmailTemplateId": {
            "type": "string"
        },
        "NotifyEmailChangeConfirmationEmailNewEmailTemplateId": {
            "type": "string"
        },
        "NotifyEmailChangeConfirmationEmailOldEmailTemplateId": {
            "type": "string"
        },
        "TncFileName": {
            "type": "string"
        },
        "B2CCustomDomain": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The hostname of the frontendEndpoints. Must be a domain name."
            }
        },
        "advancedThreatProtectionEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable or disable Advanced Threat Protection."
            }
        },
        "sharedResourceGroupName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Shared resource group name"
            }
        }
    },
    "variables": {
        "baseName": "[concat(parameters('applicationName'), '-', parameters('environmentName'))]",
        "resourceNames": {
            "applicationInsightsName": "[concat(variables('baseName'), '-ai')]",
            "defaultStorageAccountName": "[replace(concat(variables('baseName'), 'str1'), '-', '')]",
            "functionName": "[concat(variables('baseName'), '-function1')]",
            "autoScaleRuleName": "[concat(variables('baseName'), '-function-asp-autoscale-setting')]",
            "actionGroupName": "[concat(variables('baseName'),'-action-group')]",
            "actionGroupShortName": "[concat(parameters('applicationName'),'-ag')]",
            "configStoreName": "[concat(variables('baseName'), '-cfg')]",
            "frontDoorName": "[concat(variables('baseName'),'-frontend')]",
            "authSubnetResourceId": "[resourceId(parameters('sharedResourceGroupName'),'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
        },
        "frontDoor": {
            "frontendEndpointName": "[concat(variables('baseName'),'-frontend-azurefd-net')]",
            "frontendEndpointHostName": "[concat(variables('baseName'),'-frontend.azurefd.net')]",
            "frontendEndpointCustomDomainName": "[replace(parameters('B2CCustomDomain'),'.','-')]",
            "frontendEndpointCustomDomain": "[parameters('B2CCustomDomain')]",
            "backendPoolName": "[concat(variables('baseName'),'-backend')]",
            "backendPoolAddress": "[concat(parameters('B2CTenantShortName'),'.b2clogin.com')]",
            "backendPoolHostHeader": "[concat(parameters('B2CTenantShortName'),'.b2clogin.com')]",
            "routingRuleName": "[concat(variables('baseName'),'-rule')]",
            "useCustomHostName": "[not(empty(parameters('B2CCustomDomain')))]"
        },
        "frontDoorFrontendEndpoints": {
            "frontendEndpointsBase": [
                {
                    "name": "[variables('frontDoor').frontendEndpointName]",
                    "properties": {
                        "hostName": "[variables('frontDoor').frontendEndpointHostName]",
                        "sessionAffinityEnabledState": "Disabled",
                        "sessionAffinityTtlSeconds": 0,
                        "webApplicationFirewallPolicyLink": null,
                        "customHttpsConfiguration": null
                    }
                }
            ],
            "frontendEndpointsCustomDomain": [
                {
                    "name": "[variables('frontDoor').frontendEndpointCustomDomainName]",
                    "properties": {
                        "hostName": "[variables('frontDoor').frontendEndpointCustomDomain]",
                        "sessionAffinityEnabledState": "Disabled",
                        "sessionAffinityTtlSeconds": 0
                    }
                }
            ]
        },
        "frontDoorFrontendEndpointsCombined": "[union(variables('frontDoorFrontendEndpoints').frontendEndpointsBase,variables('frontDoorFrontendEndpoints').frontendEndpointsCustomDomain)]",
        "frontDoorRoutingRules": {
            "routingRuleFrontendEndpointBase": [
                {
                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('resourceNames').frontDoorName, variables('frontDoor').frontendEndpointName)]"
                }
            ],
            "routingRuleCustomDomainFrontendEndpoint": [
                {
                    "id": "[resourceId('Microsoft.Network/frontdoors/frontendEndpoints', variables('resourceNames').frontDoorName, variables('frontDoor').frontendEndpointCustomDomainName)]"
                }
            ]
        },
        "frontDoorRoutingRuleFrontendEndpointsCombined": "[union(variables('frontDoorRoutingRules').routingRuleFrontendEndpointBase,variables('frontDoorRoutingRules').routingRuleCustomDomainFrontendEndpoint)]",
        "resourceIds": {
            "appInsightsId": "[resourceId('Microsoft.Insights/components/', variables('resourceNames').applicationInsightsName)]",
            "defaultStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('resourceNames').defaultStorageAccountName)]",
            "servicePlanId": "[resourceId(parameters('sharedResourceGroupName'),'Microsoft.Web/serverfarms', parameters('servicePlanName'))]",
            "functionId": "[resourceId('Microsoft.Web/sites', variables('resourceNames').functionName )]",
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('resourceNames').actionGroupName)]",
            "storageAccountDefaultBlobContainerId": "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('resourceNames').defaultStorageAccountName, 'default')]",
            "configStoreId": "[resourceId('Microsoft.AppConfiguration/configurationStores/', variables('resourceNames').configStoreName)]"
        },
        "alertRules": [
            {
                "name": "[concat('Requests - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the average number of requests is greater than ', parameters('alertRequestsRuleCriteriaThreshold') ,' per minute over a 5 minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "Requests",
                "criteriaName": "Requests",
                "criteriaMetricName": "Requests",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Average",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertRequestsRuleCriteriaThreshold')]"
            },
            {
                "name": "[concat('Connections - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the total number of connections is greater than ', parameters('alertAppConnectionsRuleCriteriaThreshold') ,' per minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "AppConnections",
                "criteriaName": "AppConnections",
                "criteriaMetricName": "AppConnections",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Count",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertAppConnectionsRuleCriteriaThreshold')]"
            },
            {
                "name": "[concat('Average Response Time - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the average response time is greater than ', parameters('alertAverageResponseTimeRuleCriteriaThreshold') ,' seconds per minute over a 5 minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "AverageResponseTime",
                "criteriaName": "AverageResponseTime",
                "criteriaMetricName": "AverageResponseTime",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Average",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertAverageResponseTimeRuleCriteriaThreshold')]"
            },
            {
                "name": "[concat('Memory Working Set - ', variables('resourceNames').functionName)]",
                "description": "[concat('Raises an alert whenever the average memory working set is greater than ', parameters('alertMemoryWorkingSetRuleCriteriaThreshold') ,' bytes per minute over a 5 minute period')]",
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "severity": 3,
                "scopeResourceId": "[variables('resourceIds').functionId]",
                "tagDisplayName": "MemoryWorkingSet",
                "criteriaName": "MemoryWorkingSet",
                "criteriaMetricName": "MemoryWorkingSet",
                "criteriaOperator": "GreaterThan",
                "criteriaTimeAggregation": "Average",
                "criteriaMetricNamespace": "Microsoft.Web/sites",
                "criteriaThreshold": "[parameters('alertMemoryWorkingSetRuleCriteriaThreshold')]"
            }
        ]
    },
    "resources": [
        {
            "name": "[variables('resourceNames').configStoreName]",
            "type": "Microsoft.AppConfiguration/configurationStores",
            "apiVersion": "2019-10-01",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
            },
            "sku": {
                "name": "[parameters('configStoreSku')]"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "kind": "StorageV2",
            "name": "[variables('resourceNames').defaultStorageAccountName]",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                        "id":"[variables('resourceNames').authSubnetResourceId]",
                        "action": "Allow",
                        "state": "succeeded"
                        }
                    ],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot",
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false
            },
            "resources": [
                {
                    "condition": "[parameters('advancedThreatProtectionEnabled')]",
                    "type": "providers/advancedThreatProtectionSettings",
                    "name": "Microsoft.Security/current",
                    "apiVersion": "2019-01-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/', variables('resourceNames').defaultStorageAccountName)]"
                    ],
                    "properties": {
                        "isEnabled": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('resourceNames').defaultStorageAccountName, '/default')]",
            "dependsOn": [
                "[variables('resourceIds').defaultStorageAccountId]"
            ],
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('resourceNames').defaultStorageAccountName, concat('/default/terms-and-conditions'))]",
            "dependsOn": [
                "[variables('resourceIds').defaultStorageAccountId]",
                "[variables('resourceIds').storageAccountDefaultBlobContainerId]"

            ],
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "name": "[variables('resourceNames').applicationInsightsName]",
            "apiVersion": "2018-05-01-preview",
            "tags": "[parameters('tags')]",
            "type": "microsoft.insights/components",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Ver": "v2",
                "ApplicationId": "[variables('resourceNames').applicationInsightsName]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            },
            "dependsOn": [
                "[variables('resourceIds').defaultStorageAccountId]"
            ]
        },
        {
            "type": "Microsoft.Insights/actionGroups",
            "name": "[variables('resourceNames').actionGroupName]",
            "apiVersion": "2019-06-01",
            "location": "Global",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('resourceIds').functionId]"
            ],
            "scale": null,
            "properties": {
                "groupShortName": "[variables('resourceNames').actionGroupShortName]",
                "enabled": "[parameters('alertsEnabled')]",
                "emailReceivers": [
                    {
                        "name": "Email",
                        "emailAddress": "publisher@test.com",
                        "useCommonAlertSchema": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "name": "[variables('alertRules')[copyIndex()].name]",
            "apiVersion": "2018-03-01",
            "location": "global",
            "copy": {
                "name": "rulescopy",
                "count": "[length(variables('alertRules'))]"
            },
            "tags": "[parameters('tags')]",
            "scale": null,
            "properties": {
                "description": "[variables('alertRules')[copyIndex()].description]",
                "severity": "[variables('alertRules')[copyIndex()].severity]",
                "enabled": "[parameters('alertsEnabled')]",
                "scopes": [
                    "[variables('alertRules')[copyIndex()].scopeResourceId]"
                ],
                "evaluationFrequency": "[variables('alertRules')[copyIndex()].evaluationFrequency]",
                "windowSize": "[variables('alertRules')[copyIndex()].windowSize]",
                "templateType": 8,
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "[variables('alertRules')[copyIndex()].criteriaThreshold]",
                            "name": "[variables('alertRules')[copyIndex()].criteriaName]",
                            "metricNamespace": "[variables('alertRules')[copyIndex()].criteriaMetricNamespace]",
                            "metricName": "[variables('alertRules')[copyIndex()].criteriaMetricName]",
                            "dimensions": [
                            ],
                            "operator": "[variables('alertRules')[copyIndex()].criteriaOperator]",
                            "timeAggregation": "[variables('alertRules')[copyIndex()].criteriaTimeAggregation]",
                            "monitorTemplateType": 8
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "[variables('alertRules')[copyIndex()].criteriaMetricNamespace]",
                "actions": [
                    {
                        "actionGroupId": "[variables('resourceIds').actionGroupId]",
                        "webHookProperties": {
                        }
                    }
                ]
            },
            "dependsOn": [
                "[variables('resourceIds').functionId]",
                "[variables('resourceIds').actionGroupId]",
                "[variables('alertRules')[copyIndex()].scopeResourceId]"
            ]
        },
        {
            "name": "[variables('resourceNames').functionName]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "apiVersion": "2019-08-01",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "httpsOnly": true,
                "virtualNetworkSubnetId": "[variables('resourceNames').authSubnetResourceId]",
                "siteConfig": {
                    "alwaysOn": true,
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(variables('resourceIds').appInsightsId, '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                            "value": "1.0.0"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[concat('InstrumentationKey=', reference(variables('resourceIds').appInsightsId, '2015-05-01').InstrumentationKey)]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('resourceNames').defaultStorageAccountName, ';AccountKey=', listKeys(variables('resourceIds').defaultStorageAccountId, '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "DiagnosticServices_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "InstrumentationEngine_EXTENSION_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "SnapshotDebugger_EXTENSION_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
                            "value": "disabled"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "recommended"
                        },
                        {
                            "name": "AppSettings:OcpApimSubscriptionKey",
                            "value": "[parameters('NCSApimSubscriptionKey')]"
                        },
                        {
                            "name": "AppSettings:B2CTenant",
                            "value": "[parameters('B2CTenantShortName')]"
                        },
                        {
                            "name": "AppSettings:B2CSignUpPolicy",
                            "value": "[parameters('B2CSignUpPolicy')]"
                        },
                        {
                            "name": "AppSettings:B2CSignupConfirmPolicy",
                            "value": "[parameters('B2CSignupConfirmPolicy')]"
                        },
                        {
                            "name": "AppSettings:B2CPasswordResetConfirmPolicy",
                            "value": "[parameters('B2CPasswordResetConfirmPolicy')]"
                        },
                        {
                            "name": "AppSettings:RelyingPartyAppClientId",
                            "value": "[parameters('RelyingPartyAppClientId')]"
                        },
                        {
                            "name": "AppSettings:B2CRedirectUri",
                            "value": "[parameters('B2CRedirectUri')]"
                        },
                        {
                            "name": "AppSettings:B2CAuthorizationUrl",
                            "value": "[parameters('B2CAuthorizationUrl')]"
                        },
                        {
                            "name": "AppSettings:ClientSigningKey",
                            "value": "[parameters('ClientSigningKey')]"
                        },
                        {
                            "name": "AppSettings:LinkExpiresAfterMinutes",
                            "value": "5"
                        },
                        {
                            "name": "AppSettings:AccountActivationEmailExpiryInSeconds",
                            "value": "[parameters('AccountActivationEmailExpiryInSeconds')]"
                        },
                        {
                            "name": "AppSettings:SMTPServer",
                            "value": "[parameters('SMTPServer')]"
                        },
                        {
                            "name": "AppSettings:SMTPPort",
                            "value": "[parameters('SMTPPort')]"
                        },
                        {
                            "name": "AppSettings:SMTPUsername",
                            "value": "[parameters('SMTPUsername')]"
                        },
                        {
                            "name": "AppSettings:SMTPPassword",
                            "value": "[parameters('SMTPPassword')]"
                        },
                        {
                            "name": "AppSettings:SMTPUseSSL",
                            "value": "[parameters('SMTPUseSSL')]"
                        },
                        {
                            "name": "AppSettings:SMTPFromAddress",
                            "value": "[parameters('SMTPFromAddress')]"
                        },
                        {
                            "name": "AppSettings:SMTPSubject",
                            "value": "[parameters('SMTPSubject')]"
                        },
                        {
                            "name": "AppSettings:SignupEmailSubject",
                            "value": "[parameters('SignupEmailSubject')]"
                        },
                        {
                            "name": "AppSettings:SignupConfirmationEmailSubject",
                            "value": "[parameters('SignupConfirmationEmailSubject')]"
                        },
                        {
                            "name": "AppSettings:PasswordResetConfirmationEmailSubject",
                            "value": "[parameters('PasswordResetConfirmationEmailSubject')]"
                        },
                        {
                            "name": "AppSettings:FromDisplayName",
                            "value": "The National Careers Service"
                        },
                        {
                            "name": "AppSettings:resendSignupEmail",
                            "value": "Activate your account"
                        },
                        {
                            "name": "AppSettings:ncsdssapikey",
                            "value": "[parameters('NCSDSSApiKey')]"
                        },
                        {
                            "name": "AppSettings:ncsdsssearchapiurl",
                            "value": "[parameters('NCSDSSSearchApiUrl')]"
                        },
                        {
                            "name": "AppSettings:NcsDssSearchApiVersion",
                            "value": "[parameters('NCSDSSSearchApiVersion')]"
                        },
                        {
                            "name": "B2COpenApiConfig:ServiceDescription",
                            "value": "DfE NCS B2C Service"
                        },
                        {
                            "name": "B2COpenApiConfig:ServiceTitle",
                            "value": "DFE NCS Auth"
                        },
                        {
                            "name": "B2COpenApiConfig:OpenApiVersion",
                            "value": "V2"
                        },
                        {
                            "name": "AppSettings:ncsdsscreatecustomerapiurl",
                            "value": "[parameters('NCSDSSCreateCustomerApiUrl')]"
                        },
                        {
                            "name": "AppSettings:NcsDssCustomersApiVersion",
                            "value": "[parameters('NCSDSSCustomersApiVersion')]"
                        },
                        {
                            "name": "AppSettings:ncsdsscreatecontactapiurl",
                            "value": "[parameters('NCSDSSCreateContactApiUrl')]"
                        },
                        {
                            "name": "AppSettings:NcsDssContactDetailsApiVersion",
                            "value": "[parameters('NCSDSSContactDetailsApiVersion')]"
                        },
                        {
                            "name": "AppSettings:ncsdsscreateidentityapiurl",
                            "value": "[parameters('NCSDSSCreateIdentityApiUrl')]"
                        },
                        {
                            "name": "AppSettings:NcsDssDigitalIdentitiesApiVersion",
                            "value": "[parameters('NCSDSSDigitalIdentitiesApiVersion')]"
                        },
                        {
                            "name": "AppSettings:ncsdssgetcustomerapiurl",
                            "value": "[parameters('NCSDSSGetCustomerUrl')]"
                        },
                        {
                            "name": "AppSettings:ncsdsspatchdigitalidentityapiurl",
                            "value": "[parameters('NCSDigitalIdentityUrl')]"
                        },
                        {
                            "name": "AppSettings:TouchpointId",
                            "value": "[parameters('TouchpointId')]"
                        },
                        {
                            "name": "AppSettings:B2CTenantId",
                            "value": "[parameters('B2CTenantFullName')]"
                        },
                        {
                            "name": "AppSettings:B2CGraphAccessClientId",
                            "value": "[parameters('B2CGraphAccessClientId')]"
                        },
                        {
                            "name": "AppSettings:B2CGraphAccessClientSecret",
                            "value": "[parameters('B2CGraphAccessClientSecret')]"
                        },
                        {
                            "name": "AppSettings:EmailChangeConfirmationEmailSubjectNewEmail",
                            "value": "[parameters('EmailChangeConfirmationEmailSubjectNewEmail')]"
                        },
                        {
                            "name": "AppSettings:EmailChangeConfirmationEmailSubjectOldEmail",
                            "value": "[parameters('EmailChangeConfirmationEmailSubjectOldEmail')]"
                        },
                        {
                            "name": "AppSettings:B2CChangeEmailPolicy",
                            "value": "[parameters('B2CChangeEmailPolicy')]"
                        },
                        {
                            "name": "AppSettings:ExtensionAppId",
                            "value": "[parameters('ExtensionAppId')]"
                        },
                        {
                            "name": "AppSettings:NotifyApiKey",
                            "value": "[parameters('NotifyApiKey')]"
                        },
                        {
                            "name": "AppSettings:NotifyAidedSignupEmailTemplateId",
                            "value": "[parameters('NotifyAidedSignupEmailTemplateId')]"
                        },
                        {
                            "name": "AppSettings:NotifySelfSignupEmailTemplateId",
                            "value": "[parameters('NotifySelfSignupEmailTemplateId')]"
                        },
                        {
                            "name": "AppSettings:NotifyPasswordResetConfirmationEmailTemplateId",
                            "value": "[parameters('NotifyPasswordResetConfirmationEmailTemplateId')]"
                        },
                        {
                            "name": "AppSettings:NotifyEmailChangeConfirmationEmailNewEmailTemplateId",
                            "value": "[parameters('NotifyEmailChangeConfirmationEmailNewEmailTemplateId')]"
                        },
                        {
                            "name": "AppSettings:NotifyEmailChangeConfirmationEmailOldEmailTemplateId",
                            "value": "[parameters('NotifyEmailChangeConfirmationEmailOldEmailTemplateId')]"
                        },
                        {
                            "name": "AppSettings:TncFileName",
                            "value": "[parameters('TncFileName')]"
                        },
                        {
                            "name": "AppSettings:TncContainerName",
                            "value": "terms-and-conditions"
                        },
                        {
                            "name": "AppSettings:StorageAccountConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('resourceNames').defaultStorageAccountName, ';AccountKey=', listKeys(variables('resourceIds').defaultStorageAccountId, '2015-05-01-preview').key1)]"
                        }
                    ]
                },
                "name": "[variables('resourceNames').functionName]",
                "serverFarmId": "[variables('resourceIds').servicePlanId]",
                "clientAffinityEnabled": true
            },
            "dependsOn": [
                "[variables('resourceIds').defaultStorageAccountId]",
                "[variables('resourceIds').appInsightsId]"
            ]
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/frontdoors",
            "name": "[variables('resourceNames').frontDoorName]",
            "location": "global",
            "tags": {},
            "properties": {
                "friendlyName": "[variables('resourceNames').frontDoorName]",
                "enabledState": "Enabled",
                "healthProbeSettings": [
                    {
                        "name": "healthProbeSettings-1610112949853",
                        "properties": {
                            "path": "/",
                            "protocol": "Https",
                            "intervalInSeconds": 30,
                            "healthProbeMethod": "Head",
                            "enabledState": "Disabled"
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "loadBalancingSettings-1610112949853",
                        "properties": {
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "additionalLatencyMilliseconds": 0
                        }
                    }
                ],
                "frontendEndpoints": "[if(variables('frontDoor').useCustomHostName,variables('frontDoorFrontendEndpointsCombined'),variables('frontDoorFrontendEndpoints').frontendEndpointsBase)]",
                "backendPools": [
                    {
                        "name": "[variables('frontDoor').backendPoolName]",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[variables('frontDoor').backendPoolAddress]",
                                    "privateLinkResourceId": null,
                                    "privateLinkLocation": null,
                                    "privateEndpointStatus": null,
                                    "privateLinkApprovalMessage": null,
                                    "enabledState": "Enabled",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "[variables('frontDoor').backendPoolHostHeader]"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('resourceNames').frontDoorName, 'loadBalancingSettings-1610112949853')]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('resourceNames').frontDoorName, 'healthProbeSettings-1610112949853')]"
                            }
                        }
                    }
                ],
                "routingRules": [
                    {
                        "name": "[variables('frontDoor').routingRuleName]",
                        "properties": {
                            "frontendEndpoints": "[if(variables('frontDoor').useCustomHostName,variables('frontDoorRoutingRuleFrontendEndpointsCombined'),variables('frontDoorRoutingRules').routingRuleFrontendEndpointBase)]",
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "customForwardingPath": null,
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', variables('resourceNames').frontDoorName, variables('frontDoor').backendPoolName)]"
                                },
                                "cacheConfiguration": null
                            }
                        }
                    }
                ],
                "backendPoolsSettings": {
                    "enforceCertificateNameCheck": "Enabled",
                    "sendRecvTimeoutSeconds": 30
                }
            }
        },
        {
            "condition": "[variables('frontDoor').useCustomHostName]",
            "type": "Microsoft.Network/frontdoors/frontendEndpoints/customHttpsConfiguration",
            "apiVersion": "2020-07-01",
            "name": "[concat(variables('resourceNames').frontDoorName, '/',if(variables('frontDoor').useCustomHostName,variables('frontDoor').frontendEndpointCustomDomainName,'placeholder'),'/default')]",
            "dependsOn": [
                "[variables('resourceNames').frontDoorName]"
            ],
            "properties": {
                "protocolType": "ServerNameIndication",
                "certificateSource": "FrontDoor",
                "frontDoorCertificateSourceParameters": {
                    "certificateType": "Dedicated"
                },
                "minimumTlsVersion": "1.2"
            }
        }
    ],
    "outputs": {
        "functionName": {
            "type": "string",
            "value": "[variables('resourceNames').functionName]"
        },
        "functionUrl": {
            "type": "string",
            "value": "[concat('https://', variables('resourceNames').functionName, '.azurewebsites.net')]"
        },
        "functionMasterKey": {
            "type": "string",
            "value": "[listkeys(concat(variables('resourceIds').functionId, '/host/default/'),'2016-08-01').masterKey]"
        },
        "functionDefaultKey": {
            "type": "string",
            "value": "[listkeys(concat(variables('resourceIds').functionId, '/host/default/'),'2016-08-01').functionKeys.default]"
        },
        "applicationInsightsInstrumentationKey": {
            "type": "string",
            "value": "[reference(variables('resourceIds').appInsightsId, '2015-05-01').InstrumentationKey]"
        }
    }
}